<%= form_for(dispatch, :html=> {:id => 'dispatch-form'} ) do |f| %>
<% @projects = Project.includes(commodity: :commodity_category).where('archived = ? OR archived IS NULL',false)%>
<% @commodities = Commodity.all%>
<% @commodity_categories = CommodityCategory.all%>
<% @uoms = UnitOfMeasure.all%>
<div class="wrapper wrapper-content">
  <div class="ibox float-e-margins col-sm-12">
    <div class="ibox-content col-sm-12">

      <% if dispatch.errors.any? %>
      <div class="panel panel-danger">
        <div class="panel-heading">
          <%= pluralize(dispatch.errors.count, "error") %>
          prohibited this dispatch from being saved.
        </div>

        <div class="panel-body">
          <ul>
            <% dispatch.errors.full_messages.each do |message| %>
            <li><%= message %></li>
            <% end %>
          </ul>
        </div>
      </div>
      <% end %>
      <input id="basic" name="basic" type="text" style="display:none" value="<%=params[:basic]%>" />
    
      <div class="row">
        <div class="col-sm-6 m-0">
          <div class="form-group">
            <%= f.label :gin_no, "GIN Number" %> <span class="required">*</span>
            <%= f.text_field :gin_no, :class => 'form-control big-text-field', :autofocus => true, :required => true %>
          </div>
        </div>
        <div class="col-sm-6">
          <div class="form-group" id="requisition-input-group">
            <%= f.label :requisition_number, "Requisition Number" %> <span class="required">*</span> &middot;  
              <span class=""><i class="fa fa-times label-danger" title="Requisition not found."> </i> </span>
              <span class=""><i class="fa fa-check label-primary"  title="Requisition exists."> </i></span>
            <% if(params[:requisition_no].present?) %>
              <%= f.text_field :requisition_number, :class => 'form-control big-text-field', :required => true, :id => 'req_no_input', :value => params[:requisition_no], :data => {:commodity => '' } %>
            <% else %>
              <%= f.text_field :requisition_number, :class => 'form-control big-text-field', :required => true, :id => 'req_no_input' %>
            <% end %>
          </div>
        </div>  
      </div>
      <div class="row">
        <div class="col-sm-6">
          <div class="form-group">
            <%= f.label :operation_id %> <span class="required">*</span>
            <% if (params[:operation_id].present?) %>
                <%= f.select  :operation_id,  options_from_collection_for_select(Operation.order(:name), 'id', 'name', params[:operation_id] ) , {:required => true , :prompt => "-- Select Operation --" }, :class => 'form-control width-100per'  %> 
            <% elsif (@dispatch.operation_id.present?) %>
                <%= f.select  :operation_id,  options_from_collection_for_select(Operation.order(:name), 'id', 'name', @dispatch.operation_id ) , {:required => true , :prompt => "-- Select Operation --" }, :class => 'form-control width-100per'  %> 
            <% else %>
                <%= f.select  :operation_id,  options_from_collection_for_select(Operation.order(:name), 'id', 'name' ) , {:required => true , :prompt => "-- Select Operation --" }, :class => 'form-control width-100per'  %> 
            <% end %>       
          </div>
        </div>
        <div class="col-sm-6 m-0">
          <div class="form-group">
            <%= f.label :dispatch_date %> <span class="required">*</span>
            <%= f.text_field :dispatch_date, :class => 'form-control datepicker', :required => true  %>
          </div>
        </div>              
      </div>
      <div class="row">
        <div class="col-sm-6">
          <div class="form-group">
            <%= f.label :hub %> <span class="required">*</span>
            <% if (params[:hub_id].present?) %>
                <%= f.select :hub_id,  options_from_collection_for_select(Hub.order(:name), 'id', 'name', params[:hub_id] ) , {:required => true , :prompt => "-- Select Hub --" }, :class => 'form-control width-100per'  %>
            <% elsif (@dispatch.hub_id.present?) %>
                <%= f.select :hub_id,  options_from_collection_for_select(Hub.order(:name), 'id', 'name', @dispatch.hub_id ) , {:required => true , :prompt => "-- Select Hub --" }, :class => 'form-control width-100per'  %> 
            <% else %>
                <%= f.select :hub_id,  options_from_collection_for_select(Hub.order(:name), 'id', 'name' ) , {:required => true , :prompt => "-- Select Hub --" }, :class => 'form-control width-100per'  %>
            <% end %>      
            
          </div>
        </div>
        <div class="col-sm-6">
          <div class="form-group">
            <%= f.label :warehouse_id  %> <span class="required">*</span>
            <% if (params[:hub_id].present?)
                @warehouses = []
                @warehouses = Warehouse.where(:hub_id => params[:hub_id])
              elsif (@dispatch.hub_id.present?)
                @warehouses = []
                @warehouses = Warehouse.where(:hub_id => @dispatch.hub_id)
              else 
                @warehouses = []
              end %>
            <%= select_tag 'dispatch[warehouse_id]', options_from_collection_for_select(@warehouses, "id", "name", @dispatch.warehouse_id),
              :required => true, prompt: "Select Warehouse", :class => 'form-control width-100per', :style => 'min-width: 80px',
              "data-option-dependent" => true,
              "data-option-observed" => "dispatch_hub_id",
              "data-option-url" => "/warehouses/#{:hub}.json",
              "data-option-key-method" => :id,
              "data-option-value-method" => :name %>
          </div>
        </div>
      </div>
      
    </div>
  </div>

  <div class="ibox float-e-margins">
    <div class="ibox-content">
      <div class="row">
        <% if (params[:fdp_id].present?) %>
          <%= render 'shared/fdp_selector', name: 'dispatch[fdp_id]', fdpId: params[:fdp_id], required: true  %>
        <% else %>
          <%= render 'shared/fdp_selector', name: 'dispatch[fdp_id]', fdpId: (@dispatch.fdp ?  @dispatch.fdp.id : nil), required: true  %>
        <% end %>
      </div>
    </div>
  </div>

  <div class="ibox float-e-margins">
    <div class="ibox-content">
      <table class="table">
              <thead>
                <tr>
                  <th>Donor</th>
                  <th>Project</th>
                  <th>Commodity</th>                 
                  <th>Unit of Measure</th>
                  <th>Quantity</th>                  
                  <th></th>
                </tr>
              </thead>

              <tbody id="dispatchItemsTableBody">

                  <% @dispatch.dispatch_items.each do |dispatch_line| %>
                  
                  <tr class="dispatch-line">
                    <td>
                      <select name="dispatch[dispatch_items[][organization_id]]" class="form-control" readonly>
                        <option value="<%= dispatch_line&.organization&.id %>"><%= dispatch_line&.organization&.name %></option>
                      </select>
                    </td>
                    <td>
                      <select name="dispatch[dispatch_items[][project_id]]" class="form-control" readonly>
                        <option value="<%= dispatch_line&.project&.id %>"><%= dispatch_line&.project&.project_code %></option>
                      </select>
                    </td>
                    <td>
                      <%= dispatch_line&.commodity&.name %>
                    </td>               
                    <td>
                      <select name="dispatch[dispatch_items[][unit_of_measure_id]]" class="form-control" readonly>
                        <option value="<%= dispatch_line&.unit_of_measure&.id %>"><%= dispatch_line&.unit_of_measure&.name %></option>
                      </select>
                    </td>
                    <td>
                      <input name="dispatch[dispatch_items[][quantity]]" type="number" class="form-control" value="<%= dispatch_line.quantity %>" readonly/>
                    </td>  
                    <td>
                      <a href="#" class="remove-dispatch-line"><i class="fa fa-times"></i></a>
                    </td>
                  </tr>
                    
                  <% end %>
                  <tr>   
                      <div style="display: none;">
                        <input name="dispatch[dispatch_items[][commodity_category_id]]" id="commodity-category-select" value=""/>
                        <input name="dispatch[dispatch_items[][commodity_id]]" id="commodity-select" value=""/>
                      </div>
                      <td>
                        <%= select_tag 'dispatch[dispatch_items[][organization_id]]',  options_from_collection_for_select( Organization.all, 'id', 'name' ) , { :prompt => "-- Choose --",  'data-parsley-required' => 'true', :class => 'form-control', :id => 'donor_select'} %>
                      </td>                      
                      <td>
                        <select id="dispatch_project_select" name='dispatch[dispatch_items[][project_id]]', class = 'form-control dispatch_project_select' data-parsley-required %>
                        </select>
                      </td>                   
                      <td>
                        <input class="form-control" name="commodity_di" id="commodity_di" type="text" disabled="disabled">
                      </td>
                      <td>
                        <select name="dispatch[dispatch_items[][unit_of_measure_id]]" id="uom-select" class="form-control" data-parsley-required>
                            <option value="">-- Choose --</option>

                          </select>
                      </td>
                      <td>
                          <input id="quantity-di" name="dispatch[dispatch_items[][quantity]]" type="number" step="any" class="form-control" data-parsley-required/>
                          <span id="qunaity-limit" class=""></span>
                      </td>                       
                      <td>
                          <a href="#" class="btn btn-primary" id="add-dispatch-line">Add</a>
                      </td>
                  </tr>
              </tbody>
            
            </table>
    </div>
  </div>


  <div class="ibox float-e-margins">
    <div class="ibox-content">
                  <div class="form-group col-md-6">
                <label  for="weightBridgeTicket">Weight Bridge Ticket # <span class="required">*</span>
                </label>
                <div>
                    <%= f.number_field :weight_bridge_ticket_number, :class => 'form-control', :required => true  %>
                </div>
            </div>
            <div class="form-group col-md-6">
                <label  for="transporter">Transporter <span class="required">*</span>
                </label>
                <div>
                <%= f.collection_select :transporter_id,
                  Transporter.order(:name), :id, :name, {include_blank: '-- Choose --'}, {:class => 'form-control', :required => true } %>
                </div>
            </div>

           
            <div class="form-group col-md-6">
                <label  for="plateNumber">Plate # <span class="required">*</span>
                </label>
                <div>
                    <%= f.text_field :plate_number, :class => 'form-control', :required => true  %>
                </div>
            </div>

             <div class="form-group col-md-6">
                <label  for="storeKeeperName">Store keeper name # <span class="required">*</span>
                </label>
                <div>
                    <%= f.text_field :storekeeper_name, :class => 'form-control', :required => true  %>
                </div>
            </div>

            <div class="form-group col-md-6">
                <label  for="trailerPlateNumber">Trailer Plate #
                </label>
                <div>
                    <%= f.text_field :trailer_plate_number, :class => 'form-control' %>
                </div>
            </div>

            <div class="form-group col-md-6">
                
            </div>
            <div class="form-group col-md-6">
                <label  for="driversName">Driver's Name
                </label>
                <div>
                    <%= f.text_field :drivers_name, :class => 'form-control' %>
                </div>
            </div>

            <div class="clearfix"></div>
    </div>
  </div>

  <div class="ibox float-e-margins">
    <div class="ibox-content">
      <div class="form-group">
            <%= f.label :remark %>
            <%= f.text_area :remark, :class => 'form-control' %>
      </div>

      <div class="actions">
            <%= f.submit :class => 'btn btn-primary', :id => 'submit-dispatch' %>
      </div>
    </div>
  </div>

</div>

<% end %>

<script type="text/javascript">

          var REMOVE_dispatchLINE_BTN = '<a href="#" class="remove-dispatch-line"><i class="fa fa-times"></i></a>';
          var EMPTY_OPTION = '<option value="">-- Choose --</option>';
          
          $( function() { 

              $("#fdp_selector_region").addClass('col-sm-3'); 
              $("#fdp_selector_zone").addClass('col-sm-3'); 
              $("#fdp_selector_woreda").addClass('col-sm-3'); 
              $("#fdp_selector_fdp").addClass('col-sm-3'); 

              var req_no = $('#req_no_input').val();
              if (req_no == '' || req_no == '')
              {
                $("#requisition-input-group i.fa-times").removeClass('hidden'); 
                $("#requisition-input-group i.fa-check").addClass('hidden'); 
              }
              else{
                $.getJSON( '/requisitions/get_requisiton_by_number', 
                    { requisition_no: $('#req_no_input').val()}, 
                    function(data) { 

                      if(data!="" && data!=null)
                      {
                        $("#requisition-input-group i.fa-check").removeClass('hidden'); 
                        $("#requisition-input-group i.fa-times").addClass('hidden'); 
                        console.log("Commodity id: " + data.requisition.commodity_id);    
                        $('#req_no_input').attr("data-commodity", data.requisition.commodity_id);
                        var donor_id = $("#donor_select").find('option:selected').val();
                        var commodity_id = data.requisition.commodity_id;
                        updateProjects(donor_id,commodity_id);
                        var operation_id = data.requisition.operation_id; 
                        if( null !== operation_id) {                         
                            $("#dispatch_operation_id").val( operation_id); 
                        }

                        var region_id = data.requisition.region_id; 

                        if( null !== region_id) { 
                          
                          $("select[name=region]:first").val(region_id).change(); 

                          var zone_id = data.requisition.zone_id; 

                          if( null !== zone_id ) { 
                            $("select[name=zone]:first").data('value', zone_id);
                          }  
                        }
                      }
                      
                    }
                )
                .error(function(event, jqxhr, exception) {
                    $("#requisition-input-group i.fa-times").removeClass('hidden'); 
                    $("#requisition-input-group i.fa-check").addClass('hidden'); 
                    $('#req_no_input').attr("data-commodity", "");
                    var commodity_id = "";
                    var donor_id = $("#donor_select").find('option:selected').val();
                    $('#uom-select').html("");
                    updateProjects(donor_id,commodity_id);
                });
              }
              
              $('#req_no_input').keyup( $.debounce( 500, function() { 
                $.getJSON( '/requisitions/get_requisiton_by_number', 
                    { requisition_no: $(this).val()}, 
                    function(data) { 
                      console.log(data);
                      if(data.requisition!="" && data.requisition!=null)
                      {
                        var operation_id = data.requisition.operation_id; 
                        if( null !== operation_id) { 
                          $("#dispatch_operation_id").val( operation_id); 
                        }

                        var commodity_id = data.requisition.commodity_id;
                        var commodity_category_id = data.commodity_category_id
                        if( null !== commodity_id) {
                            $("#commodity_id_select").val( commodity_id); 
                        }
                        if( null !== commodity_category_id) {
                            $("#commodity_category_id_select").val( commodity_category_id); 
                        }
                        $('#req_no_input').attr("data-commodity", data.requisition.commodity_id);
                        var donor_id = $("#donor_select").find('option:selected').val();
                        updateProjects(donor_id,commodity_id);
                        
                        var region_id = data.requisition.region_id; 

                        if( null !== region_id) { 
                          
                          $("select[name=region]:first").val(region_id).change(); 

                          var zone_id = data.requisition.zone_id; 

                          if( null !== zone_id ) { 
                            $("select[name=zone]:first").data('value', zone_id);
                          }  
                        }
                        $("#requisition-input-group i.fa-check").removeClass('hidden'); 
                        $("#requisition-input-group i.fa-times").addClass('hidden'); 
                      }
                    }
                )
                .error(function(event, jqxhr, exception) {
                    $("#requisition-input-group i.fa-times").removeClass('hidden'); 
                    $("#requisition-input-group i.fa-check").addClass('hidden'); 
                    $('#req_no_input').attr("data-commodity", "");
                    var commodity_id = "";
                    var donor_id = $("#donor_select").find('option:selected').val();
                    $('#uom-select').html("");
                    updateProjects(donor_id,commodity_id);
                });
              }));

              $("#add-dispatch-line").click( function(e) { 
                  e.preventDefault(); 
                  var hub = $('#dispatch_hub_id').val();
                  var warehouse = $('#dispatch_warehouse_id').val();
                  var project = $("#dispatch_project_select").find('option:selected').val();
                  var unit = $("#uom-select").find('option:selected').val();
                  var quantity = $("#quantity-di").val();

                  var $this = $(this); 

                  var $dispatchLineForm = $this.closest('tr'); 

                  var valid = true; 

                  $dispatchLineForm.find(':input').each( function() { 
                      $(this).parsley().validate(); 
                      valid = $(this).parsley().isValid() && valid; 
                  });

                  if( !valid ) {
                    return; 
                  }

                  if(quantity <= 0)
                  {
                    $("#qunaity-limit").removeClass("label label-primary");
                    $("#qunaity-limit").addClass("label label-danger");
                    $("#qunaity-limit").html("");
                    $("#qunaity-limit").html("Quantity must be greater than zero(0)!");
                    return;
                  }

                  var flag = validate_quantity(this, hub, warehouse, project, quantity, unit);
                  console.log("validate quantity: ");
                  console.log(flag);
              }); 

              $('#dispatchItemsTableBody').on('click', '.remove-dispatch-line', function(e) { 
                  $(e.target).closest( 'tr').fadeOut('slow', function(){
                    $(this).remove();
                  });
              });

              $('#submit-dispatch').click( function(e) { 

                  if( $('.dispatch-line').length === 0 ) { 
                    toastr.error("You need to atleast add one commodity."); 

                    e.preventDefault();
                    return; 
                  }

              });


              $('#commodity-category-select').change( function() { 
                var val = $(this).val();

                if( val === '' ) {
                  return; 
                }


                $("#commodity-select > option").addClass('hidden'); 
                $("#commodity-select > option.cc-" + val).removeClass('hidden'); 

                $("#commodity-select > option:first").removeClass('hidden'); 



              });

  function validate_quantity(node, hub, warehouse, project, quantity, unit)
  {
    if( hub!="" && warehouse!="" && project!="" && quantity!="" && unit!="")
    {
      $.ajax({
		        url:'/dispatches/validate_quantity',
		        type:'POST',
		        dataType:'json',
		        data:{
		        	dispatch: {
		        		hub_id: hub,
                warehouse_id: warehouse,
						    proj_id: project,
                quantity: quantity,
                unit: unit
		        	}	            
		        },
		        before: function() {
		        
		        },
		        success:function(data){
		        		console.log(data);	
                if(!data){
                  $("#qunaity-limit").removeClass("label label-primary");
                  $("#qunaity-limit").addClass("label label-danger");
                  $("#qunaity-limit").html("");
                  $("#qunaity-limit").html("More than available stock!");
                  return;
                }   
                var $this = $(node); 

                $("#qunaity-limit").hide();

                var $dispatchLineForm = $this.closest('tr'); 
                
                var $newRow = $dispatchLineForm.clone();

                $newRow.find('td').last().html(REMOVE_dispatchLINE_BTN); 

                $newRow.find(':input').attr('readonly', true).removeAttr('id'); 

                $newRow.find('#qunaity-limit').remove();

                $newRow.addClass('dispatch-line');

                $newRow.insertBefore( $dispatchLineForm); 

                $dispatchLineForm.find(':input').val('');                          
		        },
		        error:function(data){
		            console.log(data);
		        }
		    });
    }
  }

  function check_stock(hub, warehouse, project)
  {
    if( hub!="" && hub!=null && warehouse!="" && warehouse!=null && project!="" && project!=null)
    {
      $.ajax({
		        url:'/dispatches/check_stock',
		        type:'POST',
		        dataType:'json',
		        data:{
		        	dispatch: {
		        		hub_id: hub,
                warehouse_id: warehouse,
						    proj_id: project
		        	}	            
		        },
		        before: function() {
		        
		        },
		        success:function(data){
		        		console.log(data);	
                if(data > 0){
                  $("#qunaity-limit").removeClass("label label-danger");
                  $("#qunaity-limit").addClass("label label-primary");
                }
                else{
                  $("#qunaity-limit").removeClass("label label-primary");
                  $("#qunaity-limit").addClass("label label-danger");
                }
                $("#qunaity-limit").html("");
                $("#qunaity-limit").html("Available stock " + data + " MT");             
		        },
		        error:function(data){
		            console.log(data);
		        }
		    });
    }
    else{
      $("#qunaity-limit").removeClass("label label-primary");
      $("#qunaity-limit").addClass("label label-danger");
      $("#qunaity-limit").html("");
      $("#qunaity-limit").html("Please select hub, warehouse, and project!");
    }
  }


  function updateProjects(donor_id, commodity_id){        
    if (donor_id === '')
      return;
    var allProjects = <%= @projects.to_json.html_safe %>
    var projects_by_donor;

    var commodities = <%= @commodities.to_json.html_safe %>
    var commodity = $.grep(commodities, function (elem) {
        return elem.id == commodity_id;
    });
    commodity = commodity[0];
    var commodity_category_id = commodity["commodity_category_id"];
    console.log("commodity_category_id:");
    console.log(commodity_category_id);
    var sibling_commodities = $.grep(commodities, function (elem) {
        return elem.commodity_category_id == commodity_category_id;
    });
    console.log("sibling_commodities:");
    console.log(sibling_commodities);
    var sibling_commodity_ids = $.map( sibling_commodities, function( sc ) {
      return sc["id"];
    });
    console.log("sibling_commodity_ids:");
    console.log(sibling_commodity_ids);
    if(commodity_category_id !== '')
    {
      projects_by_donor = $.grep(allProjects, function (elem) {
        return elem.organization_id == donor_id && $.inArray(elem.commodity_id, sibling_commodity_ids) !== -1
      });
      console.log("projects_by_donor:");
      console.log(projects_by_donor);
      $('#commodity_di').val("");
    }
    else{
      console.log("Commodity id not set!");
      projects_by_donor = [];
      $('#commodity_di').val("");
    }
     
    var commodities = <%= @commodities.to_json.html_safe %>
    var proj_options = $.map(projects_by_donor, function (val) {
      var commodity = $.grep(commodities, function (elem) {
        return elem.id == val.commodity_id
      });
      var commodity = commodity[0];          
      return '<option value="' + val.id + '" data-category-id="' + commodity["commodity_category_id"] + '">' + val.project_code + '</option>';
    });
    console.log(proj_options);
    proj_options.unshift(EMPTY_OPTION);


    $('#dispatch_project_select').html(proj_options);
  }

  function updateCommodityAndUnit(projectId, categoryId){
    if (projectId === '')
    {
      $('#uom-select').html("");
      return;
    }
      
    var allProjects = <%= @projects.to_json.html_safe %>
    var project = $.grep(allProjects, function (elem) {
      return elem.id == projectId
    });
    var commodities = <%= @commodities.to_json.html_safe %>
    var commodity = $.grep(commodities, function (elem) {
        return elem.id == project[0].commodity_id
    });
    var commodity = commodity[0]; 
    $('#commodity_di').val(commodity["name"]);
    $('#commodity-select').val(commodity["id"]);
    var hub = $('#dispatch_hub_id').val();
    var warehouse = $('#dispatch_warehouse_id').val();
    check_stock(hub, warehouse, projectId);

    var commodity_categories = <%= @commodity_categories.to_json.html_safe %>
    var commodity_category = $.grep(commodity_categories, function (elem) {
        return elem.id == commodity["commodity_category_id"]
    });
    commodity_category = commodity_category[0];
    $('#commodity-category-select').val(commodity_category["id"]);
    var allUnitOfMeasures = <%= @uoms.to_json.html_safe %>
    if ('' === commodity_category)
      return;
    var unitOfMeasuresInCategory = $.grep(allUnitOfMeasures, function (elem) {
      return elem.uom_category_id == commodity_category["uom_category_id"]
    });
    var options = $.map(unitOfMeasuresInCategory, function (val) {
      return '<option value="' + val.id + '">' + val.name + '</option>';
    });
    options.unshift(EMPTY_OPTION);

    $('#uom-select').html(options);
    $("#qunaity-limit").show();
  }

  $('#dispatch_warehouse_id').change(function(){
    var hub = $('#dispatch_hub_id').val();
    var warehouse = $(this).val();
    var projectId = $("#dispatch_project_select").find('option:selected').val();
    if( hub!="" && hub!=null && warehouse!="" && warehouse!=null && projectId!="" && projectId!=null)
    {
      console.log("Hub = " + hub + " --- Warehouse = " + warehouse + " --- project = " + projectId);
      check_stock(hub, warehouse, projectId);
    }
  });

  $('#donor_select').change(function(){
    var donor_id = $(this).val();
    var commodity_id = $('#req_no_input').attr("data-commodity");
    updateProjects(donor_id,commodity_id);
  });

  $('#dispatch_project_select').change(function(){
    console.log("-------Start------");
    var projectId = $(this).find('option:selected').val();
    console.log("projectId: " + projectId);
    var categoryId = $(this).find('option:selected').data('category-id');
    console.log("categoryId: " + categoryId);
    updateCommodityAndUnit(projectId, categoryId);
  });

    $("#commodity-select").change(function () {
    var categoryId = $(this).find('option:selected').data('uom-category-id');
    var allUnitOfMeasures = <%= @uoms.to_json.html_safe %>
    if ('' === categoryId)
      return;

    var unitOfMeasuresInCategory = $.grep(allUnitOfMeasures, function (elem) {
      return elem.uom_category_id == categoryId
    });

    var options = $.map(unitOfMeasuresInCategory, function (val) {
      return '<option value="' + val.id + '">' + val.name + '</option>';
    });

    options.unshift(EMPTY_OPTION);

    $('#uom-select').html(options);

  });
          });
        </script>



